/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        int size = 0;

        ListNode temp = head;

        while( temp != null ){
            size++;
            temp = temp.next;
        }

        int del = size - n;
        temp = head;
        int i = 1;
        while(i < del){
            if(temp.next != null)
            temp = temp.next;
            i++;
        }

        if(size == 1) return null;
        if(del == 0) {
            head = head.next;
            return head;
        }

        if(temp.next == null) return head;
        else if (temp.next.next == null){
            temp.next = null;
            return head;
        }
        else {
            temp.next = temp.next.next;
            return head;
        }

    }
}

