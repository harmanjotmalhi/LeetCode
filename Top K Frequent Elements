class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        
        int[] positive = new int[10001];
        int[] negative = new int[10001];
        for(int i = 0; i < positive.length; i++){
            positive[i] = 0;
            negative[i] = 0;
        }
        

        for(int i = 0; i < nums.length; i++){

            if(nums[i] < 0){
                int temp = nums[i]*-1;
                negative[temp] = negative[temp]+1;
            }
            else{
                positive[nums[i]] = positive[nums[i]] + 1;
            }
        }

        int [] ret = new int[k];

    for(int count = 0; count < k; count++){
        int max = 0;
        int index = 0;
        for(int i = 0; i < positive.length;i++){
            if(max < positive[i]){
                index = i;
                max = positive[i];
            }
        }
        int nmax = 0;
        int nindex = 0;
        for(int i = 0; i < negative.length;i++){
            if(nmax < negative[i]){
                nindex = i;
                nmax = negative[i];
            }
        }

        if(nmax > max){
            ret[count] = nindex*-1;
            negative[nindex] = 0;
            nmax = 0;
            max = 0;
            index = 0;
            nindex = 0;
        }
        else{
             ret[count] = index;
            positive[index] = 0;
            nmax = 0;
            max = 0;
            index = 0;
            nindex = 0;
        }
    }

    return ret;
    }
}
